{"version":3,"sources":["components/SideBarForm.js","components/Student.js","components/StudentList.js","App.js","index.js"],"names":["SideBarForm","props","useState","StudentClasses","setStudentClasses","Campus","setCampus","section","setSection","firstNameRef","useRef","lastNameRef","campusRef","studentIdRef","dobRef","genderRef","mobileRef","emailRef","classRef","sectionRef","useEffect","fetch","then","res","json","data","console","log","classes","campus","Offcanvas","show","shouldSidebarVisible","onHide","closeSideBar","placement","backdrop","style","overflow","Header","closeButton","Title","fontSize","Body","onSubmit","event","preventDefault","first_name","current","value","last_name","user_id","student","_id","student_id","dob","gender","email","mobile_number","class_name","method","body","JSON","stringify","headers","status","setRefresh","Refresh","className","htmlfor","type","id","defaultValue","ref","map","camp","campus_name","selected","disabled","Value","placeholder","onChange","target","filter","studentclass","sections","sec","length","marginLeft","onClick","Student","size","marginTop","borderSpacing","borderCollapse","background","colSpan","students","docs","backgroundColor","padding","boxShadow","height","href","Id","std","openSideBar","editStudent","StudentList","setShouldSidebarVisible","currentStudent","setCurrentStudent","setStudent","page","limit","undefined","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.4816aabc.chunk.js","sourcesContent":["import React, { useEffect, useState, useRef } from \"react\";\r\nimport { Form, Offcanvas } from \"react-bootstrap\";\r\n\r\nfunction SideBarForm(props) {\r\n  const [StudentClasses, setStudentClasses] = useState([]);\r\n  const [Campus, setCampus] = useState([]);\r\n  const [section, setSection] = useState([]);\r\n  const firstNameRef = useRef(null);\r\n  const lastNameRef = useRef(null);\r\n  const campusRef = useRef(null);\r\n  const studentIdRef = useRef(null);\r\n  const dobRef = useRef(null);\r\n  const genderRef = useRef(null);\r\n  const mobileRef = useRef(null);\r\n  const emailRef = useRef(null);\r\n  const classRef = useRef(null);\r\n  const sectionRef = useRef(null);\r\n\r\n  const sectionHandler = (event) => {\r\n    console.log(event.target.value);\r\n    var [std] = StudentClasses.filter(\r\n      (studentclass) => studentclass.class_name == event.target.value\r\n    );\r\n    var sections = std.section.map((sec) => sec.section);\r\n    setSection(sections);\r\n  };\r\n\r\n  const submitHandler = (event) => {\r\n    event.preventDefault();\r\n    var data = {\r\n      first_name: firstNameRef.current.value,\r\n      last_name: lastNameRef.current.value,\r\n      campus: campusRef.current.value,\r\n      user_id: props.student._id,\r\n      student_id: studentIdRef.current.value,\r\n      dob: dobRef.current.value ? dobRef.current.value : \"1998-01-01\",\r\n      gender: genderRef.current.value,\r\n      email: emailRef.current.value,\r\n      mobile_number: mobileRef.current.value,\r\n      class_name: classRef.current.value,\r\n      section: sectionRef.current.value,\r\n    };\r\n\r\n    fetch(\"https://mtml-api.hestawork.com/api/user/update-student \", {\r\n      // Adding method type\r\n      method: \"PUT\",\r\n      // Adding body or contents to send\r\n      body: JSON.stringify(data),\r\n      // Adding headers to the request\r\n      headers: {\r\n        \"Content-type\": \"application/json\",\r\n      },\r\n    })\r\n      .then((res) => res.json())\r\n      .then((data) => {\r\n        if (data.status == 200) {\r\n          console.log(\"student data updated successfully.....\");\r\n          props.closeSideBar();\r\n          props.setRefresh(!props.Refresh);\r\n        }\r\n      });\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetch(\"https://mtml-api.hestawork.com/api/userClass/class-details\")\r\n      .then((res) => res.json())\r\n      .then((data) => {\r\n        console.log(data.data.classes);\r\n        setStudentClasses(data.data.classes);\r\n        setCampus(data.data.campus);\r\n      });\r\n  }, []);\r\n\r\n  return (\r\n    <Offcanvas\r\n      show={props.shouldSidebarVisible}\r\n      onHide={props.closeSideBar}\r\n      placement=\"end\"\r\n      backdrop=\"false\"\r\n      style={{ overflow: \"scroll\" }}\r\n    >\r\n      <Offcanvas.Header closeButton>\r\n        <Offcanvas.Title style={{ fontSize: \"20px\" }}>\r\n          Edit Student\r\n        </Offcanvas.Title>\r\n      </Offcanvas.Header>\r\n      <Offcanvas.Body style={{ fontSize: \"20px\" }}>\r\n        <form onSubmit={submitHandler}>\r\n          <div className=\"mb-3\">\r\n            <label htmlfor=\"fname\" className=\"form-label\">\r\n              First Name\r\n            </label>\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control\"\r\n              id=\"fname\"\r\n              defaultValue={props.student.first_name}\r\n              ref={firstNameRef}\r\n            ></input>\r\n          </div>\r\n\r\n          <div className=\"mb-3\">\r\n            <label htmlfor=\"lname\" className=\"form-label\">\r\n              Last Name\r\n            </label>\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control\"\r\n              id=\"lname\"\r\n              defaultValue={props.student.last_name}\r\n              ref={lastNameRef}\r\n            ></input>\r\n          </div>\r\n          <div className=\"mb-3\">\r\n            <label htmlfor=\"campus\" className=\"form-label\">\r\n              Campus\r\n            </label>\r\n            <select id=\"campus\" className=\"form-select\" ref={campusRef}>\r\n              {Campus.map((camp) => {\r\n                return (\r\n                  <option\r\n                    value={camp.campus_name}\r\n                    selected={\r\n                      props.student.campus == camp.campus_name ? true : false\r\n                    }\r\n                  >\r\n                    {camp.campus_name}\r\n                  </option>\r\n                );\r\n              })}\r\n            </select>\r\n          </div>\r\n          <div className=\"mb-3\">\r\n            <label htmlfor=\"std_id\" className=\"form-label\">\r\n              Student Id*\r\n            </label>\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control\"\r\n              id=\"std_id\"\r\n              defaultValue={props.student.student.student_id}\r\n              disabled\r\n              ref={studentIdRef}\r\n            ></input>\r\n          </div>\r\n\r\n          <div className=\"mb-3\">\r\n            <label htmlfor=\"dob\" className=\"form-label\">\r\n              Date Of Birth\r\n            </label>\r\n            <input\r\n              type=\"date\"\r\n              className=\"form-control\"\r\n              id=\"dob\"\r\n              defaultValue={props.student.student.dob}\r\n              ref={dobRef}\r\n            ></input>\r\n          </div>\r\n\r\n          <div className=\"mb-3\">\r\n            <label htmlfor=\"gender\" className=\"form-label\">\r\n              gender\r\n            </label>\r\n            <select id=\"gender\" className=\"form-select\" ref={genderRef}>\r\n              <option\r\n                value=\"Male\"\r\n                selected={props.student.student.gender == \"Male\" ? true : false}\r\n              >\r\n                Male\r\n              </option>\r\n              <option\r\n                value=\"Female\"\r\n                selected={\r\n                  props.student.student.gender == \"Female\" ? true : false\r\n                }\r\n              >\r\n                Female\r\n              </option>\r\n              <option\r\n                Value=\"Others\"\r\n                selected={\r\n                  props.student.student.gender == \"Others\" ? true : false\r\n                }\r\n              >\r\n                Others\r\n              </option>\r\n            </select>\r\n          </div>\r\n\r\n          <div className=\"mb-3\">\r\n            <label htmlfor=\"email\" className=\"form-label\">\r\n              Email Address*\r\n            </label>\r\n            <input\r\n              type=\"email\"\r\n              className=\"form-control\"\r\n              id=\"email\"\r\n              disabled\r\n              defaultValue={props.student.email}\r\n              ref={emailRef}\r\n            ></input>\r\n          </div>\r\n\r\n          <div className=\"mb-3\">\r\n            <label htmlfor=\"mobile\" className=\"form-label\">\r\n              Mobile No*\r\n            </label>\r\n            <input\r\n              type=\"number\"\r\n              className=\"form-control\"\r\n              id=\"mobile\"\r\n              defaultValue={props.student.mobile_number}\r\n              ref={mobileRef}\r\n            ></input>\r\n          </div>\r\n\r\n          <div className=\"mb-3\">\r\n            <label htmlfor=\"classes\" className=\"form-label\">\r\n              Class\r\n            </label>\r\n            <select\r\n              id=\"classes\"\r\n              className=\"form-select\"\r\n              placeholder={props.student.student.class_name}\r\n              onChange={sectionHandler}\r\n              ref={classRef}\r\n            >\r\n              {StudentClasses.map((studentclass) => {\r\n                return (\r\n                  <option\r\n                    value={studentclass.class_name}\r\n                    selected={\r\n                      props.student.student.class_name ==\r\n                      studentclass.class_name\r\n                        ? true\r\n                        : false\r\n                    }\r\n                  >\r\n                    {studentclass.class_name}\r\n                  </option>\r\n                );\r\n              })}\r\n            </select>\r\n          </div>\r\n\r\n          <div className=\"mb-3\">\r\n            <label htmlfor=\"section\" className=\"form-label\">\r\n              Section\r\n            </label>\r\n            <select id=\"section\" className=\"form-select\" ref={sectionRef}>\r\n              {section.length == 0 ? (\r\n                <option value={props.student.student.section} selected>\r\n                  {props.student.student.section}\r\n                </option>\r\n              ) : (\r\n                section.map((sec) => {\r\n                  return (\r\n                    <option\r\n                      value={sec}\r\n                      selected={\r\n                        sec == props.student.student.section ? true : false\r\n                      }\r\n                    >\r\n                      {sec}\r\n                    </option>\r\n                  );\r\n                })\r\n              )}\r\n            </select>\r\n          </div>\r\n\r\n          <button\r\n            type=\"submit\"\r\n            className=\" button-color\"\r\n            style={{ marginLeft: \"10px\" }}\r\n          >\r\n            Save\r\n          </button>\r\n          <button\r\n            type=\"button\"\r\n            className=\"button-transparent\"\r\n            style={{ marginLeft: \"10px\" }}\r\n            onClick={props.closeSideBar}\r\n          >\r\n            Cancel\r\n          </button>\r\n        </form>\r\n      </Offcanvas.Body>\r\n    </Offcanvas>\r\n  );\r\n}\r\n\r\nexport default SideBarForm;\r\n","import React from \"react\";\r\nimport { FaEdit, FaCreativeCommonsPd } from \"react-icons/fa\";\r\nimport { BsFillTrashFill } from \"react-icons/bs\";\r\n\r\nfunction Student(props) {\r\n  const editStudent = (Id) => {\r\n    var [student] = props.students.data.docs.filter((std) => std._id == Id);\r\n    props.openSideBar(student);\r\n  };\r\n\r\n  return (\r\n    <div className=\"col-lg-12\">\r\n      <table\r\n        className=\"table\"\r\n        size=\"lg\"\r\n        style={{\r\n          marginTop: \"10px\",\r\n          borderSpacing: \"0 20px\",\r\n          borderCollapse: \"separate\",\r\n        }}\r\n      >\r\n        <tr style={{ background: \"transparent\" }}>\r\n          <th>Student #</th>\r\n          <th>First Name</th>\r\n          <th>Last Name</th>\r\n          <th>Class</th>\r\n          <th>Section</th>\r\n          <th>Email #</th>\r\n          <th>Campus</th>\r\n          <th colSpan=\"3\">Action</th>\r\n        </tr>\r\n\r\n        <tbody>\r\n          {props.students.data.docs.map((student) => {\r\n            return (\r\n              <tr\r\n                key={student.student.student_id}\r\n                style={{\r\n                  backgroundColor: \"white\",\r\n                  padding: \"20px\",\r\n                  boxShadow: \"0 4px 8px 0 rgba(0,0,0,0.2)\",\r\n                  height: \"60px\",\r\n                }}\r\n              >\r\n                <td>{student.student.student_id}</td>\r\n                <td>{student.first_name} </td>\r\n                <td>{student.last_name}</td>\r\n                <td>{student.student.class_name}</td>\r\n                <td>{student.student.section}</td>\r\n                <td>{student.email}</td>\r\n                <td>{student.campus}</td>\r\n                <td>\r\n                  <a\r\n                    href=\"#\"\r\n                    onClick={(event) => {\r\n                      event.preventDefault();\r\n                      editStudent(student._id);\r\n                    }}\r\n                  >\r\n                    <FaEdit />\r\n                  </a>\r\n                </td>\r\n                <td>\r\n                  <a href=\"#\">\r\n                    <FaCreativeCommonsPd />\r\n                  </a>\r\n                </td>\r\n                <td>\r\n                  <a href=\"#\">\r\n                    <BsFillTrashFill />\r\n                  </a>\r\n                </td>\r\n              </tr>\r\n            );\r\n          })}\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Student;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport SideBarForm from \"./SideBarForm\";\r\nimport Student from \"./Student\";\r\n\r\nfunction StudentList(props) {\r\n  const [shouldSidebarVisible, setShouldSidebarVisible] = useState(false);\r\n  const [currentStudent, setCurrentStudent] = useState({});\r\n  const [students, setStudent] = useState({});\r\n  const [Refresh, setRefresh] = useState(false);\r\n\r\n  useEffect(() => {\r\n    fetch(\"https://mtml-api.hestawork.com/api/user/filter-students \", {\r\n      method: \"POST\",\r\n      body: JSON.stringify({ page: \"1\", limit: \"10\" }),\r\n      headers: {\r\n        \"Content-type\": \"application/json; charset=UTF-8\",\r\n      },\r\n    })\r\n      .then((res) => res.json())\r\n      .then((data) => {\r\n        console.log(data);\r\n        setStudent(data);\r\n      });\r\n  }, [Refresh]);\r\n\r\n  const closeSideBar = () => {\r\n    setShouldSidebarVisible(false);\r\n  };\r\n\r\n  const openSideBar = (student) => {\r\n    console.log(student);\r\n    setCurrentStudent(student);\r\n    setShouldSidebarVisible(true);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <h2>Student Information</h2>\r\n      <div className=\"row\">\r\n        {students.data !== undefined && (\r\n          <Student\r\n            students={students}\r\n            setStudent={setStudent}\r\n            shouldSidebarVisible={shouldSidebarVisible}\r\n            closeSideBar={closeSideBar}\r\n            openSideBar={openSideBar}\r\n          />\r\n        )}\r\n\r\n        {shouldSidebarVisible && (\r\n          <SideBarForm\r\n            student={currentStudent}\r\n            setRefresh={setRefresh}\r\n            Refresh={Refresh}\r\n            shouldSidebarVisible={shouldSidebarVisible}\r\n            closeSideBar={closeSideBar}\r\n            openSideBar={openSideBar}\r\n          />\r\n        )}\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default StudentList;\r\n","import React from \"react\";\nimport StudentList from \"./components/StudentList\";\n\nfunction App() {\n  return (\n    <div className=\"container-fluid\">\n      <StudentList />\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"./index.css\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}